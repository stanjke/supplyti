(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function d(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(n){if(n.ep)return;n.ep=!0;const o=d(n);fetch(n.href,o)}})();const T="https://stanjke.github.io/supplyti/",i={},r={NAVIGATION:".navigation__name",SERVICES:{TITLE:".services__title",SUBTITLE:".services__subtitle",DESCRIPTION:".services_description"},ABOUT:{TITLE:".about__title",DESCRIPTION:".about__description"}},u={SERVICES:{SERVICE_TITLE:"services_section_title"},ABOUT:{TITLE:"about_us_title",DESCRIPTION:"about_description"}},f="#language-toggle",l=Object.freeze({EN:"en",UA:"ua"});function c(e){const t=document.documentElement.lang||l.EN;return i[t]&&i[t][e]?i[t][e]:e}const I=()=>{document.querySelector(r.ABOUT.TITLE).textContent=c(u.ABOUT.TITLE),document.querySelector(r.ABOUT.DESCRIPTION).textContent=c(u.ABOUT.DESCRIPTION)},S=()=>document.querySelectorAll(r.NAVIGATION).forEach(e=>{e.textContent=c(e.id)}),m=()=>{document.querySelector(r.SERVICES.TITLE).textContent=c(u.SERVICES.SERVICE_TITLE),document.querySelectorAll(r.SERVICES.SUBTITLE).forEach(e=>e.textContent=c(e.id)),document.querySelectorAll(r.SERVICES.DESCRIPTION).forEach(e=>e.textContent=c(e.id))};function L(){S(),m(),I()}async function E(e){return fetch(`${T}/i18n/locales/${e}.json`).then(t=>{if(!t.ok)throw new Error(`Network response was not ok: ${t.statusText}`);return t.json()}).then(t=>{i[e]=t,L()}).catch(t=>{console.warn("Error loading translations:",t)})}function g(){const e=document.querySelector(f);e?e.addEventListener("change",t=>{const s=t.target.checked?l.UA:l.EN;document.documentElement.lang=s,E(s)}):console.warn("Language toggle element not found.")}const N=()=>{document.addEventListener("DOMContentLoaded",()=>{const e=l.EN;document.documentElement.lang=e,E(e),g()})};(function(){N()})();
